{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","value","errToast","msg","toast","error","handleChange","e","setState","target","clearStateValue","handleSubmit","preventDefault","trim","props","onSubmit","this","images","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","img","alt","src","ImageGallery","clearImgState","galleryGeneration","map","webformatURL","tags","id","query","fetch","then","r","json","prevState","hits","prevProps","getImg","App","status","setQuery","changeStatus","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAGqBA,G,kNACnBC,MAAQ,CACNC,MAAO,I,EAGTC,SAAW,SAAAC,GAAG,OAAIC,IAAMC,MAAMF,I,EAE9BG,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEP,MAAOM,EAAEE,OAAOR,S,EAGlCS,gBAAkB,kBAAM,EAAKF,SAAS,CAAEP,MAAO,M,EAM/CU,aAAe,SAAAJ,GACbA,EAAEK,iBACF,IAAMX,EAAQ,EAAKD,MAAMC,MAAMY,OACjB,KAAVZ,GAIJ,EAAKa,MAAMC,SAASd,GACpB,EAAKS,mBAJH,EAAKR,SAAS,oF,iEAPhBc,KAAKR,SAAW,CAAES,OAAQ,M,+BAclB,IACAhB,EAAUe,KAAKhB,MAAfC,MAER,OACE,wBAAQiB,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaH,SAAUC,KAAKL,aAA5C,UACE,wBAAQQ,KAAK,SAASD,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZrB,MAAOA,EACPsB,SAAUP,KAAKV,wB,GA7CYkB,c,OCDxB,SAASC,EAAT,GAAyC,IAAbC,EAAY,EAAZA,IAAKC,EAAO,EAAPA,IAC9C,OACE,oBAAIT,UAAU,mBAAd,SACE,qBAAKU,IAAKF,EAAKC,IAAKA,EAAKT,UAAU,6BCCzC,IAKqBW,E,4MACnB7B,MAAQ,CACNiB,OAAQ,I,EAsBVa,cAAgB,WACd,EAAKtB,SAAS,CAAES,OAAQ,M,EAG1Bc,kBAAoB,WAGlB,OAFmB,EAAK/B,MAAhBiB,OAEMe,KAAI,SAAAN,GAAG,OACnB,cAACD,EAAD,CAA+BC,IAAKA,EAAIO,aAAcN,IAAKD,EAAIQ,MAAxCR,EAAIS,Q,qDA3BxBC,GAAQ,IAAD,OACZC,MAAM,GAAD,OAXQ,2BAWR,cACcD,EADd,iBARS,EAQT,gBAVG,qCAUH,6DAPK,KAUPE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAArB,GAAM,OACV,EAAKT,UAAS,SAAAiC,GAAS,MAAK,CAC1BxB,OAAO,GAAD,mBAAMwB,EAAUxB,QAAhB,YAA2BA,EAAOyB,gB,yCAK7BC,EAAWF,GACxBE,EAAUP,QAAUpB,KAAKF,MAAMsB,QACjCpB,KAAKc,gBACLd,KAAK4B,OAAO5B,KAAKF,MAAMsB,U,+BAiBzB,OAAO,oBAAIlB,UAAU,eAAd,SAA8BF,KAAKe,0B,GArCJP,aCArBqB,E,4MACnB7C,MAAQ,CACNoC,MAAO,GACPU,OAAQ,Q,EAGVC,SAAW,SAAA9C,GACT,EAAKO,SAAS,CAAE4B,MAAOnC,K,EAGzB+C,aAAe,SAAAF,GACb,EAAKtC,SAAS,CAAEsC,OAAQA,K,uDAIxB,OACE,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,CAAWH,SAAUC,KAAK+B,WAC1B,cAAC,EAAD,CAAcX,MAAOpB,KAAKhB,MAAMoC,QAEhC,cAAC,IAAD,W,GApByBZ,aCClByB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.361a3d0a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  errToast = msg => toast.error(msg);\r\n\r\n  handleChange = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  clearStateValue = () => this.setState({ value: '' });\r\n\r\n  clearStateImages() {\r\n    this.setState = { images: [] };\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const value = this.state.value.trim();\r\n    if (value === '') {\r\n      this.errToast('Введите запрос');\r\n      return;\r\n    }\r\n    this.props.onSubmit(value);\r\n    this.clearStateValue();\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={value}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ImageGalleryItem({ img, alt }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img src={img} alt={alt} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\n// import ApiServices from './ApiServices';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst KEY = '19101483-97eb89a6c64111aa623235b5f';\r\n\r\nlet currentPage = 1;\r\nlet perPage = 12;\r\nexport default class ImageGallery extends Component {\r\n  state = {\r\n    images: [],\r\n  };\r\n\r\n  getImg(query) {\r\n    fetch(\r\n      `${BASE_URL}?q=${query}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\r\n    )\r\n      .then(r => r.json())\r\n      .then(images =>\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...images.hits],\r\n        })),\r\n      );\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.query !== this.props.query) {\r\n      this.clearImgState();\r\n      this.getImg(this.props.query);\r\n    }\r\n  }\r\n\r\n  clearImgState = () => {\r\n    this.setState({ images: [] });\r\n  };\r\n\r\n  galleryGeneration = () => {\r\n    const { images } = this.state;\r\n\r\n    return images.map(img => (\r\n      <ImageGalleryItem key={img.id} img={img.webformatURL} alt={img.tags} />\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return <ul className=\"ImageGallery\">{this.galleryGeneration()}</ul>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Searchbar from './Components/Searchbar';\r\n// import Button from './Components/Button';\r\nimport ImageGallery from './Components/ImageGallery';\r\n// import ImageGalleryItem from './Components/ImageGalleryItem';\r\n// import Loader from './Components/Loader';\r\n// import Modal from './Components/Modal';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    query: '',\r\n    status: 'idle',\r\n  };\r\n\r\n  setQuery = value => {\r\n    this.setState({ query: value });\r\n  };\r\n\r\n  changeStatus = status => {\r\n    this.setState({ status: status });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Searchbar onSubmit={this.setQuery} />\r\n        <ImageGallery query={this.state.query} />\r\n\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}